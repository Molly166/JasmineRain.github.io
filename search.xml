<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Merge sort</title>
      <link href="/JasmineRain.github.io/2025/08/18/Merge-sort/"/>
      <url>/JasmineRain.github.io/2025/08/18/Merge-sort/</url>
      
        <content type="html"><![CDATA[<p>归并排序适合处理大规模数据排序，尤其是当需要稳定排序时非常有用</p><h2 id="归并排序原理"><a href="#归并排序原理" class="headerlink" title="归并排序原理"></a>归并排序原理</h2><ol><li>分治Divide，将数组从中间分成两半</li><li>解决conquer，递归地对左右两半分别进行归并排序</li><li>合并combine，将两个已排序的子数组合并成一个有序数组</li></ol><ul><li>时间复杂度：O(n logn)</li><li>空间复杂度：O(n)，需要额外数组用于合并</li><li>稳定排序，相同元素的相对顺序保持不变</li></ul><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeSort</span><span class="params">(arr []<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(arr) &lt;= <span class="number">1</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mid := <span class="built_in">len</span>(arr) / <span class="number">2</span></span><br><span class="line">    left := mergeSort(arr[:mid])</span><br><span class="line">    right := mergeSort(arr[mid:])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> merge(left, right)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(left, right []<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    result := []<span class="type">int</span>&#123;&#125;</span><br><span class="line">    i, j := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i &lt; <span class="built_in">len</span>(left) &amp;&amp; j &lt; <span class="built_in">len</span>(right) &#123;</span><br><span class="line">        <span class="keyword">if</span> left[i] &lt;= right[j] &#123;</span><br><span class="line">            result = <span class="built_in">append</span>(result, left[i])</span><br><span class="line">            i++</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            result = <span class="built_in">append</span>(result, right[j])</span><br><span class="line">            j++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    result = <span class="built_in">append</span>(result, left[i:]...)</span><br><span class="line">    result = <span class="built_in">append</span>(result, right[j:]...)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    arr := []<span class="type">int</span>&#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">3</span>&#125;</span><br><span class="line">    sorted := mergeSort(arr)</span><br><span class="line">    fmt.Println(sorted) <span class="comment">// [1 2 3 4 5 6]</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MergeSort</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mergeSort</span><span class="params">(<span class="type">int</span>[] arr)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr.length &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">        mergeSortHelper(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">mergeSortHelper</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) <span class="keyword">return</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        mergeSortHelper(arr, left, mid);</span><br><span class="line">        mergeSortHelper(arr, mid + <span class="number">1</span>, right);</span><br><span class="line">        merge(arr, left, mid, right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">merge</span><span class="params">(<span class="type">int</span>[] arr, <span class="type">int</span> left, <span class="type">int</span> mid, <span class="type">int</span> right)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] temp = <span class="keyword">new</span> <span class="title class_">int</span>[right - left + <span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> left, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt;= arr[j]) temp[k++] = arr[i++];</span><br><span class="line">            <span class="keyword">else</span> temp[k++] = arr[j++];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) temp[k++] = arr[i++];</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= right) temp[k++] = arr[j++];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">p</span> <span class="operator">=</span> <span class="number">0</span>; p &lt; temp.length; p++) arr[left + p] = temp[p];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">5</span>, <span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">3</span>&#125;;</span><br><span class="line">        mergeSort(arr);</span><br><span class="line">        System.out.println(Arrays.toString(arr)); <span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Sort </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Merge sort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How is data sorting implemented in MySQL?</title>
      <link href="/JasmineRain.github.io/2025/08/18/How-is-data-sorting-implemented-in-MySQL/"/>
      <url>/JasmineRain.github.io/2025/08/18/How-is-data-sorting-implemented-in-MySQL/</url>
      
        <content type="html"><![CDATA[<h2 id="Answer"><a href="#Answer" class="headerlink" title="Answer"></a>Answer</h2><p>排序过程中，如果排序字段命中索引，则利用<strong>索引排序</strong><br>反之，使用<strong>文件排序</strong><br>文件排序中，如果数据量少则在内存中排序，具体是使用单路排序或者双路排序<br>如果数据大则利用磁盘文件进行外部排序，一般使用归并排序</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Sort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Array</title>
      <link href="/JasmineRain.github.io/2025/08/18/Array/"/>
      <url>/JasmineRain.github.io/2025/08/18/Array/</url>
      
        <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>数组是一种<strong>线性数据结构</strong>，用于存储<strong>相同类型的元素</strong>，在内存中是<strong>连续分配</strong>的</p><h2 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h2><ol><li><p><strong>固定长度</strong>:声明时需要确定大小(静态数组)，或者动态数组可以扩展长度(for example:Go’s slice,Java’s ArrayList)</p></li><li><p><strong>随机访问</strong>:通过下标在O(1)的时间内访问任意元素</p></li><li><p><strong>连续存储</strong>:方便计算元素的地址，但插入和删除中间元素可能需要移动大量数据</p></li></ol><h2 id="数组操作"><a href="#数组操作" class="headerlink" title="数组操作"></a>数组操作</h2><h3 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定长数组</span></span><br><span class="line"><span class="keyword">var</span> arr [<span class="number">5</span>]<span class="type">int</span></span><br><span class="line">arr[<span class="number">0</span>]=<span class="number">1</span></span><br><span class="line">arr[<span class="number">2</span>]=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//动态数组 slice</span></span><br><span class="line">s:=[]<span class="type">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定长数组</span></span><br><span class="line"><span class="type">int</span>[] arr=<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>];</span><br><span class="line">arr[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">arr[<span class="number">1</span>]=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化数组</span></span><br><span class="line"><span class="type">int</span>[] arr2=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="访问数组"><a href="#访问数组" class="headerlink" title="访问数组"></a>访问数组</h3><p>按下标访问，注意下标从0开始</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(arr[<span class="number">0</span>])</span><br><span class="line">fmt.Println(s[<span class="built_in">len</span>(s)<span class="number">-1</span>])</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.Println(arr[<span class="number">0</span>]);</span><br><span class="line">System.out.Println(arr[arr.length-<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><h3 id="遍历数组"><a href="#遍历数组" class="headerlink" title="遍历数组"></a>遍历数组</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;<span class="built_in">len</span>(s);i++&#123;</span><br><span class="line">    fmt.Println(s[i])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i,v:=<span class="keyword">range</span> s&#123;</span><br><span class="line">    fmt.Println(i,v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">    System.out.println(arr[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> v:arr)&#123;</span><br><span class="line">    System.out.println(v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入和删除"><a href="#插入和删除" class="headerlink" title="插入和删除"></a>插入和删除</h3><p>数组固定长度时中间插入&#x2F;删除效率低，需要移动元素</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s:=[]<span class="type">int</span>&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;</span><br><span class="line">index:=<span class="number">2</span></span><br><span class="line">val:=<span class="number">99</span></span><br><span class="line">s=<span class="built_in">append</span>(s[:index],<span class="built_in">append</span>([]<span class="type">int</span>&#123;val&#125;,s[index:]...)...)</span><br><span class="line">fmt.Println(s)<span class="comment">// [1 2 99 3 4]</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt; list=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(Arrays.asList(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>));</span><br><span class="line">list.add(<span class="number">2</span>,<span class="number">99</span>);</span><br><span class="line">System.out.Println(list);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> DataStruct </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Array </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Computer network</title>
      <link href="/JasmineRain.github.io/2025/08/16/Computer-network/"/>
      <url>/JasmineRain.github.io/2025/08/16/Computer-network/</url>
      
        <content type="html"><![CDATA[<h2 id="basic-network"><a href="#basic-network" class="headerlink" title="basic network"></a>basic network</h2><h3 id="network’s-definition-history-develop"><a href="#network’s-definition-history-develop" class="headerlink" title="network’s definition,history,develop"></a>network’s definition,history,develop</h3><p><strong>computer network</strong>:A collection of autonomous computer systems interconnected in such a way that they can share resources with each other.</p>]]></content>
      
      
      <categories>
          
          <category> Computer network </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Dynamic Programming</title>
      <link href="/JasmineRain.github.io/2025/08/16/Dynamic-Programming/"/>
      <url>/JasmineRain.github.io/2025/08/16/Dynamic-Programming/</url>
      
        <content type="html"><![CDATA[<p>DP is a way that making the question become the more easy little questions to solve.</p><h2 id="basic-dp"><a href="#basic-dp" class="headerlink" title="basic dp"></a>basic dp</h2>]]></content>
      
      
      <categories>
          
          <category> Algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fucking learn damn english</title>
      <link href="/JasmineRain.github.io/2025/08/16/Fucking-learn-damn-english/"/>
      <url>/JasmineRain.github.io/2025/08/16/Fucking-learn-damn-english/</url>
      
        <content type="html"><![CDATA[<h2 id="Words"><a href="#Words" class="headerlink" title="Words"></a>Words</h2><p>There are some bitch English words that maybe i should damn to know or to use it.<br>I’ll do some categories to distinguish.<br>Let’s go.</p><hr><h3 id="Science-Technology"><a href="#Science-Technology" class="headerlink" title="Science &amp; Technology"></a>Science &amp; Technology</h3><blockquote><p>innovation</p></blockquote><p>创新</p><h3 id="Agriculture-Environment"><a href="#Agriculture-Environment" class="headerlink" title="Agriculture &amp; Environment"></a>Agriculture &amp; Environment</h3><h3 id="Education-Learning"><a href="#Education-Learning" class="headerlink" title="Education &amp; Learning"></a>Education &amp; Learning</h3><h3 id="Economy-Business"><a href="#Economy-Business" class="headerlink" title="Economy &amp; Business"></a>Economy &amp; Business</h3><h3 id="Society-Culture"><a href="#Society-Culture" class="headerlink" title="Society &amp; Culture"></a>Society &amp; Culture</h3><blockquote><p>author</p></blockquote><p>n.作者 作家</p><h3 id="Health-Medicine"><a href="#Health-Medicine" class="headerlink" title="Health &amp; Medicine"></a>Health &amp; Medicine</h3><h3 id="Psychology-Behavior"><a href="#Psychology-Behavior" class="headerlink" title="Psychology &amp; Behavior"></a>Psychology &amp; Behavior</h3><h3 id="Government-Law"><a href="#Government-Law" class="headerlink" title="Government &amp; Law"></a>Government &amp; Law</h3><h3 id="Transport-Tourism"><a href="#Transport-Tourism" class="headerlink" title="Transport &amp; Tourism"></a>Transport &amp; Tourism</h3><h3 id="Current-Affairs-Environment"><a href="#Current-Affairs-Environment" class="headerlink" title="Current Affairs &amp; Environment"></a>Current Affairs &amp; Environment</h3><h3 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h3><blockquote><p>abundant</p></blockquote><p>adj.大量的 丰富的 充足的<br>The learning opportunities would be <strong>abundant</strong>.</p><blockquote><p>contact</p></blockquote><p>n.联系 接触 熟人 隐形眼镜<br>vt.联系<br>“I have no <strong>contact</strong> with my father”,she said.</p><blockquote><p>annoy</p></blockquote><p>vt.使生气 使烦恼 烦扰<br>I know i’m not perfect.I know i <strong>annoy</strong> people.</p><blockquote><p>crime</p></blockquote><p>n.犯罪活动 罪行 罪过<br>You have been discovered at the scene of the <strong>crime</strong>.</p><blockquote><p>landmark</p></blockquote><p>n.地标 标志性建筑 里程碑<br>Paris is famous for its <strong>landmark</strong> such as the EiffelTower.</p><blockquote><p>worthwhile</p></blockquote><p>adj.有价值的 值得的<br>I think i’d really to do something <strong>worthwhile</strong>.</p><blockquote><p>determine</p></blockquote><p>vt.确定 查明 决定<br>vt.vi.决意 下决定<br>Meanwhile,we have to <strong>determine</strong> cause of death.</p><h2 id="Composition"><a href="#Composition" class="headerlink" title="Composition"></a>Composition</h2><h3 id="Society"><a href="#Society" class="headerlink" title="Society"></a>Society</h3><h3 id="Culture"><a href="#Culture" class="headerlink" title="Culture"></a>Culture</h3><h3 id="Education"><a href="#Education" class="headerlink" title="Education"></a>Education</h3><h3 id="Techology-Innovation"><a href="#Techology-Innovation" class="headerlink" title="Techology &amp; Innovation"></a>Techology &amp; Innovation</h3><h3 id="Health-Lifestyle"><a href="#Health-Lifestyle" class="headerlink" title="Health &amp; Lifestyle"></a>Health &amp; Lifestyle</h3><h3 id="Chinese-Culture"><a href="#Chinese-Culture" class="headerlink" title="Chinese Culture"></a>Chinese Culture</h3><h3 id="Modern-China"><a href="#Modern-China" class="headerlink" title="Modern China"></a>Modern China</h3><h3 id="Geography-Tourism"><a href="#Geography-Tourism" class="headerlink" title="Geography &amp; Tourism"></a>Geography &amp; Tourism</h3><h3 id="Economy"><a href="#Economy" class="headerlink" title="Economy"></a>Economy</h3><h3 id="other"><a href="#other" class="headerlink" title="other"></a>other</h3><blockquote><p>It has been widely noted that the topic of 主题 can exert a great impact on ourselves not only in real life but in the network,which boils down to how valued it is to modern society.Different individuals hold different views because of thier different perspectives.</p></blockquote><p>主题的话题无论是在现实生活中还是在网络上都引起了铺天盖地的争论和各种反应，归根到底</p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> English Words </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
